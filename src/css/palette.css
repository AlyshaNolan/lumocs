/**
* Calculate a custom color palette from HSL values
* Automatically takes light/dark-mode into account
* 
* Author: Hexagon <hexagon@56k.guru>
* License: MIT
*
* Customize theme color by changing Hue, Saturation and Lightness 
*/
:root {
    --primary-h: 24;
    --primary-s: 100%;
    --primary-l: 57%; /* Lightness should always be around 50%, to allow the same base color for dark and light themes */
}
/**
* Then, the following variables are defined for global use: 
* 
*  --fg
*  --fg-shaded
*  --bg
*  --bg-shaded
*  --bg-shaded-2
*  --primary
*  --primary-highlight
*
*/
:root {

    /* Color Palette - Light mode is default */
    --fg__light: hsl(var(--primary-h), 1%, 2%);
    --fg-shaded__light: hsl(var(--primary-h), 1%, 10%);
    --bg__light: hsl(var(--primary-h), 15%, 100%);
    --bg-shaded__light: hsl(var(--primary-h), 15%, 93%);
    --bg-shaded-2__light: hsl(var(--primary-h), 15%, 88%);
    --primary__light: hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) - 20%));
    --primary-highlight__light: hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) - 20%));
    
    /* Color Palette - Dark mode overrides (only used internally, overrides defaults automatically) */
    --fg__dark: hsl(var(--primary-h), 1%, 99%);
    --fg-shaded__dark: hsl(var(--primary-h), 1%, 98%);
    --bg__dark: hsl(var(--primary-h), 3%, 12%);
    --bg-shaded__dark: hsl(var(--primary-h), 3%, 10%);
    --bg-shaded-2__dark: hsl(var(--primary-h), 3%, 8%);
    --primary__dark: hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l)));
    --primary-highlight__dark: hsl(var(--primary-h), var(--primary-s), calc(var(--primary-l) + 10%));
}

/* Light mode default */
:root {
    --fg: var(--fg__light);
    --fg-shaded: var(--fg-shaded__light);
    --bg: var(--bg__light);
    --bg-shaded: var(--bg-shaded__light);
    --bg-shaded-2: var(--bg-shaded-2__light);
    --primary: var(--primary__light);
    --primary-highlight: var(--primary-highlight__light);
}

/* Light mode forced */
[data-theme="light"],
:root:not([data-theme="dark"]) {
    --fg: var(--fg__light);
    --fg-shaded: var(--fg-shaded__light);
    --bg: var(--bg__light);
    --bg-shaded: var(--bg-shaded__light);
    --bg-shaded-2: var(--bg-shaded-2__light);
    --primary: var(--primary__light);
    --primary-highlight: var(--primary-highlight__light);
}
/* Dark mode overrides - Automatically enabled if user has Dark mode enabled */
@media only screen and (prefers-color-scheme: dark) {
    :root:not([data-theme]) {
        --fg: var(--fg__dark);
        --fg-shaded: var(--fg-shaded__dark);
        --bg: var(--bg__dark);
        --bg-shaded: var(--bg-shaded__dark);
        --bg-shaded-2: var(--bg-shaded-2__dark);
        --primary: var(--primary__dark);
        --primary-highlight: var(--primary-highlight__dark);
    }
}

/* Dark mode overrides - Automatically enabled if user has Dark mode enabled */
[data-theme="dark"] {
    --fg: var(--fg__dark);
    --fg-shaded: var(--fg-shaded__dark);
    --bg: var(--bg__dark);
    --bg-shaded: var(--bg-shaded__dark);
    --bg-shaded-2: var(--bg-shaded-2__dark);
    --primary: var(--primary__dark);
    --primary-highlight: var(--primary-highlight__dark);
}